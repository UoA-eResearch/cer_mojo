#include <stdlib.h>
#include "slurm.h"
#define OPT_LONG_HIDE   0x102

job_info_msg_t *old_job_info_ptr = NULL;

void load_and_print_jobs();
void print_job_info (job_info_t * job_ptr);
int load_job(job_info_msg_t ** job_buffer_pptr, uint32_t job_id);

int main (int argc, char *argv[])
{
	slurm_conf_init(NULL);
        load_and_print_jobs();
	return 0;
}

void load_and_print_jobs ()
{
        int error_code = SLURM_SUCCESS, i, print_cnt = 0;
        uint32_t array_id = NO_VAL;
        job_info_msg_t * job_buffer_ptr = NULL;
        job_info_t *job_ptr = NULL;
        char *end_ptr = NULL;

        error_code = (int) load_job(&job_buffer_ptr, 0);
        if (error_code) {
                slurm_perror ("slurm_load_jobs error");
                return;
        }

        for (i = 0, job_ptr = job_buffer_ptr->job_array;
             i < job_buffer_ptr->record_count; i++, job_ptr++) {
                if ((array_id != NO_VAL) &&
                    (array_id != job_ptr->array_task_id))
                        continue;
                print_job_info(job_ptr);
                print_cnt++;
        }

        if (print_cnt == 0) {
          printf ("No jobs in the system\n");
        }
}

void print_job_info (job_info_t * job_ptr)
{
	printf("JobId=%u ", job_ptr->job_id);
	if (job_ptr->array_job_id) {
		printf("ArrayJobId=%u ArrayTaskId=%u ",
			 job_ptr->array_job_id, job_ptr->array_task_id);
	}
	printf("Name=%s\n", job_ptr->name);
}

int load_job(job_info_msg_t ** job_buffer_pptr, uint32_t job_id)
{
        int error_code;
        static uint16_t last_show_flags = 0xffff;
        uint16_t show_flags = 0;
        job_info_msg_t * job_info_ptr = NULL;

        error_code = slurm_load_jobs((time_t) NULL, &job_info_ptr, show_flags);
        if (error_code == SLURM_SUCCESS) {
                old_job_info_ptr = job_info_ptr;
                if (job_id)
                        old_job_info_ptr->last_update = (time_t) 0;
                last_show_flags  = show_flags;
                *job_buffer_pptr = job_info_ptr;
        }

        return error_code;
}
