Table of Contents:
##################

 * Overview
 * Installation Instructions
 * Supported Python Versions
 * Run tests


Overview
========

Display information about jobs run on the Auckland NeSI cluster (managed by LoadLeveler) in a web-based format.
Uses information from LoadLeveler and Ganglia (about the actual running processes).

The project consists of

* An LRM-agnostic web interface (CGI scripts, JavaScript files, CSS stylesheets)

* LRM-specific scheduler adapters to get information about jobs.
  Information about jobs is gathered by extracting text from the output of LRM commands.


Installation Instructions
=========================

1. Configure Python package "cluster"

 Configure the package
   Configure the LRM in the configuration file python/cluster/cluster/config.py
    * Set the value of 'main_ganglia_page' to your ganglia
      website

2. Install Python package "cluster"

   $ cd python/cluster
   $ python setup.py install

3. Install the JavaScript files and CSS stylesheets

 The JavaScript files and CSS stylesheets are expected
 to be located in the directory 'jobs' of the webservers
 base website directory (document root).
 (The following commands use ${DOCUMENT_ROOT} as the base
  website directory)

   $ mkdir -p ${DOCUMENT_ROOT}/jobs/js 
   $ mkdir -p ${DOCUMENT_ROOT}/jobs/style
   $ cp -r style/* ${DOCUMENT_ROOT}/jobs/style/
   $ cp -r js/* ${DOCUMENT_ROOT}/jobs/js/

 If the location for JavaScript and CSS files needs to be
 different from /jobs, the paths to JavaScript and CSS files
 must be adjusted in the scripts in the directory "cgi"
  
4. Install the CGI scripts

 Copy the scripts in cgi/ into the cgi-bin directory
 of the webserver

5. Install the scheduler adapter scripts 

Supported Python Versions
=========================

Tested with Python 2.4. Will probably work with all newer
versions of Python.


Run tests
=========

This project doesn't contain an extensive test suite, but
a few test-cases exist for important utility functions used
by the LRM-specific Python packages.

Prerequisites for running the tests:
 * Install 'nose'

Run the tests:

 $ cd python/cluster
 $ nosetests

